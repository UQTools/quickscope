# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    name: Test
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Get Python 
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Get Poetry
        uses: Gr1N/setup-poetry@v4
      
      - name: Install Dependencies 
        run: |
          poetry install
          sudo apt install -y rsync
      
      - name: Install Node
        uses: actions/setup-node@v2.1.2
      
      - name: Install Yarn
        uses: CultureHQ/actions-yarn@v1.0.1
      
      - name: Build Front-End
        run: poetry run build

      - name: Test
        run: poetry run pytest
        
      - name: Lint
        run: poetry run flake8 quickscope

      - name: Deployment
        run: |
          SSH_PATH="$HOME/.ssh" && mkdir -p "$SSH_PATH" && touch "$SSH_PATH/known_hosts"
          echo "${{ secrets.PRIVATE_KEY }}" > "$SSH_PATH/deploy_key"
          chmod 700 "$SSH_PATH" && chmod 600 "$SSH_PATH/known_hosts" "$SSH_PATH/deploy_key"
          eval $(ssh-agent)
          ssh-add "$SSH_PATH/deploy_key"
          ssh -i "$SSH_PATH/deploy_key" -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} "export PATH=PATH:/bin:/usr/bin:/home/${{ secrets.USER }}/.local/bin && cd /home/${{ secrets.USER }}/quickscope && git pull && source /home/${{ secrets.USER }}/.cache/pypoetry/virtualenvs/quickscope-U2wvY4rh-py3.8/bin/activate && poetry run build && echo "${{ secrets.PW }}" | sudo -S systemctl restart uwsgi"
  
